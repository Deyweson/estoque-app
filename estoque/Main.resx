<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>